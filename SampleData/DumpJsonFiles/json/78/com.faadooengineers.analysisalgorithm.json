{
  "title": "Design & Analysis of Algorithm",
  "playStoreURL": "https://play.google.com/store/apps/details?id=com.faadooengineers.analysisalgorithm",
  "category": "Education",
  "price": "$1.00",
  "datePublished": "April 9, 2013",
  "version": "1",
  "operatingSystems": "2.2 and up",
  "ratingsCount": "0",
  "rating": "0.0",
  "contentRating": "Everyone",
  "creator": "FaaDoOEngineers.com",
  "creatorURL": "https://play.google.com/store/apps/details?id=com.faadooengineers.analysisalgorithm",
  "extendedInfo": {
    "installSize": "2.1M",
    "downloadsCount": "10+",
    "downloadsCountText": "10 - 50",
    "description": "This unique application is for all students of Design & Analysis of Algorithms across the world. It covers 144 topics of Design & Analysis of Algorithms in detail. These 144 topics are divided in 5 units. Each topic is around 600 words and is complete with diagrams, equations and other forms of graphical representations along with simple text explaining the concept in detail.The USP of this application is \"ultra-portability\". Students can access the content on-the-go from any where they like. Basically, each topic is like a detailed flash card and will make the lives of students simpler and easier.Some of topics Covered in this application are:1.\tIntroduction to Algorithms2.\tEfficiency of algorithm3.\tAnalysis of insertion sort4.\tInsertion sort5.\tThe divide-and-conquer approach6.\tAnalyzing divide-and-conquer algorithms7.\tAsymptotic notation8.\tAsymptotic notation in equations and inequalities9.\tStandard notations and common functions10.\tThe hiring problem11.\tIndicator random variables12.\tBalls and bins13.\tProbabilistic analysis and further uses of indicator random variables14.\tStreaks15.\tThe on-line hiring problem16.\tOverview of Recurrences17.\tThe substitution method for recurrences18.\tThe recursion-tree method19.\tThe master method20.\tProof of the master theorem21.\tThe proof for exact powers22.\tFloors and ceilings23.\tRandomized algorithms24.\tHeaps25.\tMaintaining the heap property26.\tBuilding a heap27.\tThe heapsort algorithm28.\tPriority queues29.\tDescription of quicksort30.\tPerformance of quicksort31.\tA randomized version of quicksort32.\tAnalysis of quicksort33.\tLower bounds for sorting34.\tCounting sort35.\tRadix sort36.\tMinimum and maximum37.\tSelection in expected linear time38.\tBucket sort39.\tSelection in worst-case linear time40.\tStacks and queues41.\tLinked lists42.\tImplementing pointers and objects43.\tRepresenting rooted trees44.\tDirect-address tables45.\tHash tables46.\tHash functions47.\tOpen addressing48.\tPerfect hashing49.\tintroduction to binary search tree50.\tQuerying a binary search tree51.\tInsertion and deletion52.\tRandomly built binary search trees53.\tRed-Black Trees54.\tRotations of red black tree55.\tInsertion in red black tree56.\tDeletion in red black tree57.\tDynamic order statistics58.\tAugmenting a Data Structure59.\tInterval Trees60.\tOverview of Dynamic Programming61.\tAssembly-line scheduling62.\tMatrix-chain multiplication63.\tElements of dynamic programming64.\tLongest common subsequence65.\tOptimal binary search trees66.\tGreedy Algorithms67.\tElements of the greedy strategy68.\tHuffman codes69.\tTheoretical foundations for greedy methods70.\tA task-scheduling problem71.\tAggregate analysis72.\tThe accounting method73.\tThe potential method74.\tDynamic tables75.\tB-Trees76.\tDefinition of B-trees77.\tBasic operations on B-trees78.\tDeleting a key from a B-tree79.\tBinomial Heaps80.\tOperations on binomial heaps81.\tFibonacci Heaps82.\tMergeable-heap operations83.\tDecreasing a key and deleting a node84.\tBounding the maximum degree85.\tData Structures for Disjoint Sets86.\tLinked-list representation of disjoint sets87.\tDisjoint-set forests88.\tAnalysis of union by rank with path compression89.\tRepresentations of graphs90.\tBreadth-first search91.\tDepth-first search92.\tTopological sort93.\tStrongly connected components94.\tMinimum Spanning Trees95.\tGrowing a minimum spanning tree96.\tThe algorithms of Kruskal and Prim97.\tSingle-Source Shortest Paths98.\tThe Bellman-Ford algorithm99.\tSingle-source shortest paths in directed acyclic graphs100.\tDijkstra's algorithm101.\tDifference constraints and shortest paths102.\tShortest paths and matrix multiplication103.\tThe Floyd-Warshall algorithm104.\tJohnson's algorithm for sparse graphs105.\tFlow networks106.\tThe Ford-Fulkerson method107.\tMaximum bipartite matching108.\tPush-relabel algorithms109.\tThe relabel-to-front algorithm110.\tComparison networks",
    "reviews": [
      {
        "comment": "No reviews given!"
      }
    ],
    "permissions": [
      "android.permission.INTERNET",
      "android.permission.ACCESS_NETWORK_STATE"
    ]
  }
}
